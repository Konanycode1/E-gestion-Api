=> On crée le package.json grâce à la commande suivante: npm init -y
=> Dans la racie du projet, on crée un fichier d'extension .js qui sera le fichier de référence et c'est par ce fichier qu'on va démarrer le server(application). Dans mon cas il sagit du fichier server.js
=> On définit ce fichier dans le contenu du fichier package.json plus précisement au niveau de la propriété script
=> Après avoir définis server.js dans package.json, on lance le server grâce à la commande suivante: npm run serve

====================================================================================================================
==================================================== EXPRESS JS ====================================================
====================================================================================================================
=> On installe expressJs grâce à l'une des commandes suivantes: <npm i express> ou <npm install express>
    Lors de l'installation express un dossier node_modules et un ficher package-lock.json vont s'ajouter automatiquement dans votre projet. Je vous appele que le contenu de ce dossier ne doit pas être nodifier et n'ouvrez jamis ce dossier

=> Dans notre fichier server.js on importe le module express et on le stocke dans une variable ou constance comme bon le semble
=> Dans notre fichier server.js on crée en suite une variable ou constance qui sera une instance d'express. Dans mon cas cette viriable va se nommée <app>

=> Installons nodemon grâce à la commande suivante: <npm i nodemon -D>
    nodemon met à jour le server de namière automatique
    Après installation de nodemon, on le définit dans le contenu du fichier package.json


====================================================================================================================
==================================================== Mongoosedb ====================================================
====================================================================================================================
=> On installe par la suite mongoose grâce à la commande suivante: <npm i mongoose>




const express = require('express');
const nodemon = require('nodemon');
const path=require('path')
const cors = require('cors');
const app = express();
app.use(express.json());
app.use(cors());
app.use(express.urlencoded({extended:true}));
app.use((req, res, next) => {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
    next(); 
  });
app.use('/stockage', express.static(path.join(__dirname, 'stockage')));

const port = process.env.PORT || 3000;
const indexRoute = require('./routes/indexRouter');
app.use('/api/',indexRoute);
const {mongoose} = require('./paramConnectDB');
const { static } = require('express');
// const SuperAdminController=require('./controllers/superAdmin');
// SuperAdminController.addSuperAdmin();
app.listen(port, ()=>{console.log(`Le server est est bien démarré sur le port ${port}. Ouvrez le lient http://localhost:${port} pour voir le message.`)});

